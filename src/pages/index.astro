---
import { Image } from 'astro:assets';
import Layout from "../layouts/Layout.astro";
// Game Dev Thumbnails
import SpellboundRollersImg from "../images/gamedev-thumbnails/SpellboundRollers.png";
import SentientBuffetImg from "../images/gamedev-thumbnails/SentientBuffetThumbnail.png";
// Web Dev Thumbnails
import EventRegistrationImg from "../images/webdev-thumbnails/EventRegistrationThumbnail.png";
import OldPortfolioImg from "../images/webdev-thumbnails/OldPortfolioThumbnail.png";
import ObsidianAutoEmbed from "../images/webdev-thumbnails/Auto-Embed-Getting-Started.gif"

// TODO: Change all to gifs
const gamedevThumbnails: ImageMetadata[] = [SpellboundRollersImg, SentientBuffetImg];
const webdevThumbnails: ImageMetadata[] = [ObsidianAutoEmbed, OldPortfolioImg, EventRegistrationImg];

const repeatArray = new Array<number>(4).fill(0);
---
<Layout title='Home' description='Home page to redirect you to the page you are looking for.'>
	<div class="thumbnail-list" id="gamedev-thumbnail">
		{
			repeatArray.map(() => (
				gamedevThumbnails.map((thumbnail) => (
					<Image src={thumbnail} alt={"Thumbnail"} class="thumbnail"/>
				))
			))
		}
	</div>
	<div class="thumbnail-list" id="webdev-thumbnail">
			{
				repeatArray.map(() => (
					webdevThumbnails.map((thumbnail) => (
						<Image src={thumbnail} alt={"Thumbnail"} class="thumbnail"/>
					))
				))
			}
	</div>
	<div class="container">
		<h1>Hi I'm Ethan<br>Welcome to my Website!</h1>
		<h2>Are you here for</h2>
		<p>
			<a href="https://gamedev.gnoxnahte.dev" id="gamedev-link">Game Development</a>
			OR
			<a href="https://webdev.gnoxnahte.dev" id="webdev-link">Web Development</a>
		</p>
		<a href="/about">About Me</a>
	</div>
</Layout>

<style>
html {
	overflow: hidden;
}
body {
    text-align: center;
}
main {
    height: 100%;
    color: white;
    font-size: 20px;
    line-height: 1.6;
}

h1, h2 {
	text-align: center;
	user-select: none;
}
p {
	text-align: center;
}
a {
	pointer-events: all;
	transition: all .25s;
	backdrop-filter: blur(200px);
}
a:link, a:visited {
	color: unset;
}
a:hover {
	font-size: x-large;
	font-weight: bolder;
}

.container {
	position: relative;
	top: 50%;
	translate: 0 -55%;
	display: inline-block;
	backdrop-filter: blur(5px) contrast(1.1);
	mask-image: radial-gradient(ellipse, black 50%, transparent 75%);
	/* background-color: red; */
	padding: 15vw;
	pointer-events: none;
}

.thumbnail-list {
	position: absolute;
	display: flex;
	flex-direction: column;
	top: 0;
	width: 1vh;
	width: 45vw;
	opacity: .125;
	animation: 30s linear 0s infinite normal;
	transition: opacity 0.5s;
}
.thumbnail-list:hover, .thumbnail-list.hover{
	opacity: 0.6;
}

#gamedev-thumbnail{
	left: 2.5vw;
	animation-name: slow-scroll;
}
#webdev-thumbnail{
	right: 2.5vw;
	animation-name: slow-scroll-reverse;
}
.thumbnail {
	width: 100%;
	height: auto;
	max-height: 100vh;
	object-fit: contain;
	margin: 10px 0;
	border-radius: 15px;
	-webkit-user-drag: none;
	user-select: none;
}

@keyframes slow-scroll {
	from {
		translate: 0 -50%;
	}
	to {
		translate: 0 0;
	}
}

@keyframes slow-scroll-reverse {
	from {
		translate: 0 0;
	}
	to {
		translate: 0 -50%;
	}
}

.text-gradient {
	background-image: var(--accent-gradient);
	-webkit-background-clip: text;
	-webkit-text-fill-color: transparent;
	background-size: 400%;
	background-position: 0%;
}
</style>

<script>
	// Helps to pass the onhover / onmouseover over to the thumbnails.
	function OnHover(div: HTMLDivElement) {
		console.log("hover")
		div.classList.add("hover");
	}
	
	function OnLeave(div: HTMLDivElement) {
		console.log("leave")
		div.classList.remove("hover");
	}

	const gamedevThumbnail = document.getElementById("gamedev-thumbnail") as HTMLDivElement;
	console.log("Game: " + gamedevThumbnail.className)
	const gamedevLink = document.getElementById("gamedev-link") as HTMLAnchorElement;
	gamedevLink.addEventListener("mouseover", (e)=>OnHover(gamedevThumbnail));
	gamedevLink.addEventListener("mouseleave", (e)=>OnLeave(gamedevThumbnail));

	const webdevThumbnail = document.getElementById("webdev-thumbnail") as HTMLDivElement;
	const webdevLink = document.getElementById("webdev-link") as HTMLAnchorElement;
	webdevLink.addEventListener("mouseover", (e)=>OnHover(webdevThumbnail));
	webdevLink.addEventListener("mouseleave", (e)=>OnLeave(webdevThumbnail));

	// ===== Change animation duration based on height =====
	const animSpeed = 150; // In pixels per seconds
	gamedevThumbnail.style.animationDuration = (gamedevThumbnail.clientHeight / animSpeed).toString() + "s";
	webdevThumbnail.style.animationDuration = (webdevThumbnail.clientHeight / animSpeed).toString() + "s";

</script>