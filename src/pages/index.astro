---
import { Image } from 'astro:assets';
import Layout from "../layouts/Layout.astro";
// Game Dev Thumbnails
import SpellboundRollersImg from "../images/gamedev-thumbnails/SpellboundRollers.png";
import SentientBuffetImg from "../images/gamedev-thumbnails/SentientBuffetThumbnail.png";
// Web Dev Thumbnails
import EventRegistrationImg from "../images/webdev-thumbnails/EventRegistrationThumbnail.png";
import OldPortfolioImg from "../images/webdev-thumbnails/OldPortfolioThumbnail.png";
import ObsidianAutoEmbed from "../images/webdev-thumbnails/Auto-Embed-Getting-Started.gif"

// TODO: Change all to gifs
const gamedevThumbnails: ImageMetadata[] = [SpellboundRollersImg, SentientBuffetImg];
const webdevThumbnails: ImageMetadata[] = [ObsidianAutoEmbed, OldPortfolioImg, EventRegistrationImg];

const repeatArray = new Array<number>(4).fill(0);
---
<Layout title='Home' description="Home page" showHeader={false} showFooter={false}>
	<Fragment slot="head">
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Kalam:wght@300;400;700&family=Permanent+Marker&family=Sedgwick+Ave&display=swap" rel="stylesheet">		
	</Fragment>
	<div class="thumbnail-list" id="gamedev-thumbnail">
		{
			repeatArray.map(() => (
				gamedevThumbnails.map((thumbnail) => (
					<Image src={thumbnail} alt={"Thumbnail"} class="thumbnail" widths={[360,720,1080,1920]}/>
				))
			))
		}
	</div>
	<div class="thumbnail-list" id="webdev-thumbnail">
			{
				repeatArray.map(() => (
					webdevThumbnails.map((thumbnail) => (
						<Image src={thumbnail} alt={"Thumbnail"} class="thumbnail" widths={[360,720,1080,1920]}/>
					))
				))
			}
	</div>
	<div class="container">
		<h1>Hi I'm Ethan,<br>Welcome to my Website!</h1>
		<h2>Are you here for</h2>
		<p>
			<a href="https://gamedev.gnoxnahte.dev" id="gamedev-link">Game Development</a>
			OR
			<a href="https://webdev.gnoxnahte.dev" id="webdev-link">Web Development</a>
		</p>
		<p>
			<a href="/projects/" id="all-projects-link">View all projects</a>
		</p>
	</div>
	<div id="about-link">
		<a href="/about/">About Me</a>
	</div>
</Layout>

<style lang="scss">
	html {
		overflow: hidden;
		height: 100vh;
	}
	body {
		height: 100%;
		text-align: center;
		font-family: "Permanent Marker", cursive;
  		font-style: normal;
		font-weight: 500;
	}
	main {
		font-size: 20px;
		line-height: 1.6;
	}

	h1, h2 {
		text-align: center;
		margin: 10px 0;
		letter-spacing: 1.5px;
	}
	h1 {
		text-transform: uppercase;
	}
	p {
		font-family: system-ui, sans-serif;
		text-align: center;
		margin: 0;
		margin-top: 20px;
	}
	a {
		pointer-events: all;
		transition: font .25s;
		padding: 10px 0;

		:first-child {
			padding-left: 10px;
		}

		:last-child {
			padding-right: 10px;
		}
	}
	a:link, a:visited {
		color: unset;
	}
	a:hover {
		font-size: 1.1em;
		font-weight: bolder;
	}

	.container {
		display: flex;
		flex-direction: column;
		align-content: center;
		justify-content: center;
		backdrop-filter: blur(8px) contrast(1.1);
		mask-image: radial-gradient(ellipse, black 50%, transparent 75%);
		padding: 0 15vw;
		pointer-events: none;
		height: 90%;
		margin-bottom: 50px;
	}

	:global(.light) .container {
		backdrop-filter: blur(10px);

		background-color: rgba(255, 255, 255, 0.1);
		transition: backdrop-filter 0.5s;
	}
	.thumbnail-list {
		user-select: none;
		position: absolute;
		display: flex;
		flex-direction: column;
		top: 0;
		width: 1vh;
		width: 45vw;
		opacity: .2;
		animation: 30s linear 0s infinite normal;
		transition: opacity 0.5s;
	}
	.thumbnail-list:hover, .thumbnail-list.hover{
		opacity: 0.5;
	}

	:global(.light) .thumbnail-list {
		opacity: 0.4;

		&:hover, &.hover {
			opacity: 0.7;
		}
	}

	#gamedev-thumbnail{
		left: 2.5vw;
		animation-name: slow-scroll;
	}
	#webdev-thumbnail{
		right: 2.5vw;
		animation-name: slow-scroll-reverse;
	}
	.thumbnail {
		width: 100%;
		height: auto;
		max-height: 100vh;
		object-fit: contain;
		margin: 10px 0;
		border-radius: 15px;
		-webkit-user-drag: none;
		user-select: none;
	}

	@keyframes slow-scroll {
		from {
			translate: 0 -50%;
		}
		to {
			translate: 0 0;
		}
	}

	@keyframes slow-scroll-reverse {
		from {
			translate: 0 0;
		}
		to {
			translate: 0 -50%;
		}
	}

	#about-link {
		position: absolute;
		bottom: 2em;
		left: 0;
		right: 0;
		font-size: 1.2em;
		font-weight: bolder;
	}

</style>

<script>
	function Init() {
		// Quick check to see if it is the correct page. For when astro:page-load gets called after leaving this page
		if (window.location.pathname !== "/")
			return;

		// Highlights the thumbnails when the user hovers over the link
		function OnHover(div: HTMLDivElement) {
			div.classList.add("hover");
		}
		
		function OnLeave(div: HTMLDivElement) {
			div.classList.remove("hover");
		}

		const gamedevThumbnail = document.getElementById("gamedev-thumbnail") as HTMLDivElement;
		const gamedevLink = document.getElementById("gamedev-link") as HTMLAnchorElement;
		gamedevLink.addEventListener("mouseover", ()=>OnHover(gamedevThumbnail));
		gamedevLink.addEventListener("mouseleave", ()=>OnLeave(gamedevThumbnail));

		const webdevThumbnail = document.getElementById("webdev-thumbnail") as HTMLDivElement;
		const webdevLink = document.getElementById("webdev-link") as HTMLAnchorElement;
		webdevLink.addEventListener("mouseover", ()=>OnHover(webdevThumbnail));
		webdevLink.addEventListener("mouseleave", ()=>OnLeave(webdevThumbnail));

		const seeAllLink = document.getElementById("all-projects-link") as HTMLAnchorElement;
		seeAllLink.addEventListener("mouseover", ()=>OnHover(webdevThumbnail));
		seeAllLink.addEventListener("mouseover", ()=>OnHover(gamedevThumbnail));
		seeAllLink.addEventListener("mouseleave", ()=>OnLeave(webdevThumbnail));
		seeAllLink.addEventListener("mouseleave", ()=>OnLeave(gamedevThumbnail));

		// ===== Change animation duration based on height =====
		// TODO: Add on resize listener
		// TODO: Change animation speed instead of duration
		const animSpeed = 150; // In pixels per seconds
		gamedevThumbnail.style.animationDuration = (gamedevThumbnail.clientHeight / animSpeed).toString() + "s";
		webdevThumbnail.style.animationDuration = (webdevThumbnail.clientHeight / animSpeed).toString() + "s";
	}

	Init();
</script>