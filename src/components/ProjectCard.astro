---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import { getEntryBySlug } from 'astro:content';
import TagContainer from './TagContainer.astro';
import { GetDuration } from "../scripts/utilities.ts";

export interface Props {
    project: CollectionEntry<'projects'> | string;
}

interface EntryMetadata {
    id: string;
    slug: string;
}

const { project } = Astro.props as Props;

let projectCollectionEntry: CollectionEntry<'projects'>;

if (typeof project === "string") {
    const result = (await getEntryBySlug("projects", project));
    if (result)
        projectCollectionEntry = result;
    else {
        console.error("Cannot find project: " + project);
        return;
    }
}
else
    projectCollectionEntry = project;

const data = projectCollectionEntry.data;
const metadata: EntryMetadata = { 
    id: projectCollectionEntry.id,
    slug: projectCollectionEntry.slug
};

const tags = data.tags;

let duration = "";
if (data.startDate && data.releaseDate) {
    duration = GetDuration(data.startDate, data.releaseDate);
}
const dateOptions: Intl.DateTimeFormatOptions = { day: "numeric", month: "long", year: "numeric" };
const userLocale="en-UK";
---

<a href=`/projects/${metadata.slug}/` class="project-card">
    <Image 
        src={data.thumbnailImg} 
        alt={"Thumbnail for " + data.title} 
        transition:name=`project-img-${data.title}`
    />
    <div class="project-details">
        <p class="project-title">{data.title}</p>
        <TagContainer tags={data.tags}/>
        <p class="project-date">Date: <i>{data.startDate.toLocaleDateString(userLocale, dateOptions)}</i></p>
        <p class="project-description">{data.shortDescription}</p>
    </div>
</a>

<style>
    :global(.dark) .project-card:hover {
        --box-shadow-color: #ffffff40;
    }

    :global(.light) .project-card:hover {
        --box-shadow-color: #00000040;
    }

    .project-card {
        --box-shadow-color: #00000040;

        display: flex;
        /* max-height: 12.5rem; */
        height: max-content;
        max-width: calc(50em * 1.2);

        padding: 1em;
        gap: 1em;
        
        border-radius: 0.75em;
        
        background-color: var(--color-secondary);
        color: var(--color-text);
        text-decoration: none;

        transition: transform 0.6s, box-shadow 0.6s;

        &:hover {
            transition: transform 0.25s, box-shadow 0.4s;

            transform: translate(5px, -5px);
            box-shadow: -7px 7px 5px 0px var(--box-shadow-color);
        }
    }

    a:visited.project-card {
        color: var(--color-text);
    }
    
    img {
        object-fit: contain;
        width: 25%;
        min-width: 25%;
        /* height: min-content; */
        height: auto;
        height: 100%;
        /* max-height: 10%; */
        border-radius: 0.5em;
    }

    .project-details {
        align-self: center;
        height: min-content;

        text-wrap: pretty;
        
        p {
            margin: 0;
        }

        .project-title {
            font-size: 1.2em;
            font-weight: bold;
            margin-bottom: 0.75em;
        }

        .tag-container {
            margin: 0.5em 0;
        }

        .project-date {
            font-size: 0.9em;
            opacity: 0.6;
            margin-bottom: 0.1em;
        }
    }

    @media (max-width: 60em) {
        .project-card {
            flex-direction: column;
        }

        img {
            width: 100%;
            max-height: 15em;
        }

        .project-details {
            align-self: flex-start;
        }
    }

</style>