/* HTML Elements */

/* Color Variables */
:root.light {
    --color-background: #e3e3ff;
    --color-background-secondary: #9999ff;
    --color-background-gradient: linear-gradient(var(--color-background), var(--color-background-secondary));
    /* --color-primary: #ca494d; */
    /* --color-primary: #d25e62; */
    --color-primary: #d86372;
    --color-secondary: #a5bff7;
    /* TODO: Find a better color. Contrast ratio is quite bad on light mode */
    --color-accent: #d62329;
    --color-accent-text: #fff;
    --color-text: #000;
    --color-secondary-border: black;
}
:root, :root.dark {
    --color-background: #1f2247;
    --color-background-secondary: #131325;

    /* --color-background: #1b2446; */
    /* --color-background-secondary: #0d374a; */
    --color-background: #0f213e;
    /* --color-background-secondary: #254e7d; */
    --color-background-secondary: #1d3d62;

    --color-background-gradient: linear-gradient(var(--color-background) 15%, var(--color-background-secondary));
    --color-primary: #e15b5f;
    /* --color-secondary: #5b64c3; */
    --color-secondary: #131325;
    --color-secondary: #11111e;
    --color-accent: #e15b5f;
    --color-accent: #e76464;
    --color-accent-text: black;
    --color-text: white;
    --color-border: #ffffff80;
    --color-border-accent: var(--color-accent);

    --color-secondary-border: transparent;
}
html {
    font-family: system-ui, sans-serif;
    font-size: 110%;
    background: var(--color-background-gradient);
    /* background: var(--color-background); */
    color: var(--color-text);
    scroll-behavior: smooth;
    min-height: 100vh;
}
body {
    display: flex;
    flex-direction: column;
    margin: 0;
    padding: 0;
}
main {
    flex-grow: 2;
    height: 100%;
    line-height: 1.6;
}

/* Some buffer for the header */
body:has(header + main) {
    --heading-size: 5em;
    padding-top: var(--heading-size);
    min-height: calc(100vh - var(--heading-size));
}

body:has(.banner) {
    padding-top: 0;
}

img {
    height: auto;
    width: auto;
}

h1 { font-size: 2em;}

h2 {
    padding-bottom: 5px;
    margin-bottom: 5px;
    border-bottom: solid 2px #4e4ecb77;
}

a {
    color:var(--color-accent);
}
a:visited {
    color: #802cc5;
}

.dark a {
    color:var(--color-accent);
}
.dark a:visited {
    color: #af74e3;
}

aside {
    opacity: 0.75;
}

button {
    --btn-transition-duration: 0.2s;
    --btn-background-color: var(--color-primary);

    color: var(--color-text);
    background-color: var(--btn-background-color);
    border-radius: 0.5em;
    font-size: 0.8em;
    padding: 0.25em 0.75em;
    /* border: none; */
    border: 1px solid color-mix(in srgb, var(--btn-background-color), #FFF 45%);
    font-weight: bold;
    cursor: pointer;
    transition: background-color var(--btn-transition-duration), 
                box-shadow var(--btn-transition-duration), 
                transform var(--btn-transition-duration),
                border-width var(--btn-transition-duration);
}

button:hover {
    background-color: #111;
}

button:active {
    box-shadow: 0 0 2px 2px var(--color-accent);
    transform: scale(1.025);
}
/* For search but can be used for other input also. Not specifying [type="search"] for now. */
input {
    padding: 0.8em 0.5em 0.75em 2.7em;
    color: var(--color-text);
    border: 1.5px solid var(--color-border);
    border-radius: 0.5rem;

    background-color: color-mix(var(--color-background), black 90%);
}

/* Input cancel icon */
input[type="search" i]::-webkit-search-cancel-button {
    -webkit-appearance: none;
    height: 1.25em;
    width: 1.25em;
    background: url("../images/common/Cancel.svg") no-repeat;
    background-size: contain;
    opacity: 0.65;
    
    &:hover {
        opacity: 1;
    }
}
/* On hover */
input[type="search" i]::-webkit-search-cancel-button:hover {
    opacity: 1;
}
/* For light mode, make the icon black */
.light input[type="search" i]::-webkit-search-cancel-button {
    filter: brightness(0);
}

/* A type of radio selection, based on tab selection */
.radio-tab-selection {
    --border-radius: 0.5em;

    display: flex;
    flex-grow: 2;

    border-radius: var(--border-radius);

    overflow: hidden;
    margin: 0;
    padding: 0;

    input[type="radio"] {
        display: none;
    }

    label {
        flex: 1;
        padding: 0em 0.3em;
        display: inline-block;
        transition: background-color 0.1s;
        border: 3px solid var(--color-border-accent);
        text-align: center;
        border-right-width: 0;

        &:nth-child(2) {
            border-top-left-radius: 0.5em;
            border-bottom-left-radius: 0.5em;
        }
        
        &:last-child {
            border-top-right-radius: 0.5em;
            border-bottom-right-radius: 0.5em;
            border-right-width: initial;
        }
    }

    input[type="radio"]:checked + label {
        background-color: var(--color-accent);
    }
}

table {
    border-collapse: collapse;
    max-width: 100%;
}

td {
    padding: 6px 12px;
}

th {
    background-color: color-mix(in srgb, var(--color-background-secondary) 75%, black 25%);
}

table, th, td {
    border: 3px solid #CCC;
}

details {
    padding: 1em;
    background-color: var(--color-background-secondary);
    border-radius: 0.5em;
    border: 2px solid color-mix(in srgb, var(--color-background-secondary), #FFF 45%);

    :not(:first-child) {
        margin-top: 1em;
        margin-left: 1em;
    }

    *:last-child {
        margin-bottom: 0.4em;
    }
}

/* YouTube Embed */
iframe[src*="youtube.com"] {
    width: max(100%, 300px);
    aspect-ratio: 16/9;

    display: block;
    margin: 0 auto;

    border: none;
}

/* Scrollbar */

::-webkit-scrollbar {
    width: 15px;
}

::-webkit-scrollbar-track {
    /* box-shadow: inset 0 0 5px grey; */
    background-color: rgb(86, 86, 86);
    /* border-radius: 10px; */
}

/* Handle */
::-webkit-scrollbar-thumb {
    background: #888888;
    border-radius: 10px;
}

/* Custom classes */

/* Limits the width for easier reading */
.container, article {
    max-width: 50em;
    /* width: fit-content; */

    margin-left: auto;
    margin-right: auto;

    padding: 1em;
    padding-top: 0;
}

.card {
    padding: 1em;
    max-width: 50em;

    border-radius: 0.75em;

    background-color: var(--color-secondary);
    color: var(--color-text);
}

.date {
    font-style: italic;
}

/* View Transitions */

::view-transition-new(root), 
::view-transition-old(root),
::view-transition-image-pair(root),
::view-transition-group(root) {
    background: var(--color-background-gradient);
    animation-duration: .3s;
    animation-timing-function: linear;
}

::view-transition-group(header) {
    animation-duration: .5s;
}

/* NOTE: This is a just temporary fix. Think can be better. Leaving this todo for future reference. */
/* TODO: Fix animation.
    When SETTING animation-name,
        - The theme transition (e.g. dark to light) works.
        - BUT the transition between pages doesn't work. It snaps between each page with no transition.
    When NOT SETTING animation-name,
        - transition between pages work (crossfade). 
        - BUT the theme transition doesn't work properly. 
        What happens:
        1. The circle expands correctly but the "new transition" page isn't rendered correctly. 
        2. ::view-transition-new is always the same (when transitioning light -> dark or vice versa).
        3. The text is always white and the background is always brighter than the light theme background
        4. Then after the circle fully expands, it snaps to the correctly rendered page. 
    Not sure why setting the animation-name fixes theme transition (Same page view transition) but breaks transition between pages (Multi page transition)
    Possible reason: When inspecting the view transition in Chrome (Go animations tab and pause animations. Then click the theme button / transition to another page),
    going to "::view-transition-new", there's a animation tagged to it.
    Currently it's: animation-name: -ua-view-transition-fade-out, -ua-mix-blend-mode-plus-lighter;
    This changes the opacity and mix-blend-mode. Tried those 2 and ended up the code below.
*/
::view-transition-new(root) {
    animation-name: crossfade-out;
}

@keyframes crossfade-out {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}
::view-transition-old(root) {
    animation-name: crossfade-in;
}

@keyframes crossfade-in {
    0% {
        opacity: 1;
    }
    100% {
        opacity: 0;
    }
}

@view-transition {
    navigation: auto;
}

/* Tag colors */
.tag {
    --tag-color: var(--color-primary);
    /* Lighten the borders */
    --tag-border-color: color-mix(in srgb, var(--tag-color), #FFF 50%);
    color: black;
    font-weight: 600;
    /* TODO: Clean up the tags */
    &[data-category="Dev Tool"] {
        --tag-color: #5AD2C8;
    }
    &[data-category="Project Type"] {
        --tag-color: #A0D25A;
    }
    &[data-category="Platform"] {
        --tag-color: #9d72d8;
    }
    &[data-category="Status"] {
        --tag-color: #111;
        color: white;
    }

    &[data-category="Error Tag"] {
        --tag-color: red;
    }

    /* Status circle color */
    &[data-tag="Ongoing"] .circle{
        background-color: #04d000;
    }
    &[data-tag="Completed"] .circle{
        background-color: #00c9f4;
    }
    &[data-tag="On Hold"] .circle{
        background-color: orange;
    }
    &[data-tag="Dropped"] .circle{
        background-color: red;
    }
}

/* TODO: set colors for light mode */
.light .tag {
    filter: brightness(1.5);
    &[data-category="Dev Tool"] {
        --tag-color: #6a6392;
    }
    &[data-category="Project Type"] {
        --tag-color: #456580;
    }
    &[data-category="Platform"] {
        --tag-color: #2f7571;
    }
    &[data-category="Status"] {
        --tag-color: white;
    }

    &[data-category="Error Tag"] {
        --tag-color: red;
    }
}